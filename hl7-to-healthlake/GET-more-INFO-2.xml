<channel version="4.2.0">
  <id>f29d1b79-8ed1-45a1-ab4d-2df18af5b653</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>GET-more-INFO-2</name>
  <description></description>
  <revision>6</revision>
  <sourceConnector version="4.2.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="4.2.0">
      <pluginProperties/>
      <sourceConnectorProperties version="4.2.0">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="4.2.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.2.0">
          <sequenceNumber>0</sequenceNumber>
          <enabled>true</enabled>
          <script>//IDENTIFIER BLOCK

const identifier = [createIdentifier(
	&quot;official&quot;,
	createCodeableConcept(
		[createCoding(&quot;http://terminology.hl7.org/CodeSystem/v2-0203&quot;, &quot;&quot;, &quot;MR&quot;, &quot;&quot;, &quot;&quot;)],
		&quot;&quot;
	),
	&quot;urn:oid:1.2.36.146.595.217.0.1&quot;,
	msg.PID.id1.trim(),
	createPeriod(&quot;&quot;,&quot;&quot;),
	createReference(&quot;&quot;,&quot;&quot;,&quot;&quot;,msg.PID.assignAuth1.trim())
)];

//NAME BLOCK
const name = createName(
	&quot;official&quot;, 
	&quot;&quot;, 
	msg.PID.lastName.trim(), 
	msg.PID.firstName.trim(), 
	msg.PID.middleName.trim(), 
	&quot;&quot;, 
	&quot;&quot;, 
	&quot;&quot;
);

//TELECOM BLOCK
var telecomList = [];
var telecom = createTelecom(&quot;phone&quot;, msg.PID.homePhone.trim(), &quot;home&quot;, 1, &quot;&quot;);
if (telecom) telecomList.push(telecom);
var telecom = createTelecom(&quot;phone&quot;, msg.PID.workPhone.trim(), &quot;work&quot;, 2, &quot;&quot;);
if (telecom) telecomList.push(telecom);

//BIRTHDAY BLOCK
const birthDate  = msg.PID.dob.trim().substring(0,4) + &quot;-&quot; + msg.PID.dob.trim().substring(4,6) + &quot;-&quot; + msg.PID.dob.trim().substring(6,8);

//ADDRESS BLOCK

const address = createAddress(
	&quot;home&quot;, 
	&quot;both&quot;, 
	(msg.PID.address.trim() + &quot; &quot; + msg.PID.city.trim() + &quot;, &quot; + msg.PID.state.trim() + &quot; &quot; + msg.PID.zip.trim()), 
	[msg.PID.address.trim()], 
	msg.PID.city.trim(), 
	msg.PID.county.trim(), 
	msg.PID.state.trim(), 
	msg.PID.zip.trim(), 
	msg.PID.country.trim(), 
	&quot;&quot;
);

//MARITAL STATUS BLOCK
const maritalStatus = createCodeableConcept(
	[createCoding(&quot;http://terminology.hl7.org/CodeSystem/v3-MaritalStatus&quot;, &quot;&quot;, msg.PID.maritalStatus.trim(), &quot;&quot;, &quot;&quot;)], 
	&quot;&quot;
);

//CONTACT BLOCK
var contactList = [];
var contact = {};
for each (nk1 in msg.NK1) {
	contact = createContact(
		[createCodeableConcept([createCoding(&quot;http://terminology.hl7.org/CodeSystem/v2-0131&quot;, &quot;&quot;, nk1.relation.trim(), &quot;&quot;, &quot;&quot;)], &quot;&quot;)], 
		createName(&quot;official&quot;,&quot;&quot;, nk1.lastName.trim(), nk1.firstName.trim(), &quot;&quot;, &quot;&quot;, &quot;&quot;), 
		[createTelecom(&quot;phone&quot;, nk1.homePhone.trim(), &quot;home&quot;, 1, &quot;&quot;),
		createTelecom(&quot;phone&quot;, nk1.workPhone.trim(), &quot;work&quot;, 2, &quot;&quot;)], 
		createAddress(
			&quot;home&quot;, 
			&quot;both&quot;, 
			(nk1.address.trim() + &quot; &quot; + nk1.city.trim() + &quot;, &quot; + nk1.state.trim() + &quot; &quot; + nk1.zip.trim()), 
			[nk1.address.trim()], 
			nk1.city.trim(), 
			nk1.county.trim(), 
			nk1.state.trim(), 
			nk1.zip.trim(), 
			nk1.country.trim(), 
			&quot;&quot;
		), 
		createGender(nk1.gender.trim()), 
		&quot;&quot;, 
		&quot;&quot;
	);
	if (contact) contactList.push(contact);
}
if (contactList.length == 0 ) contactList = null; 

//COMMUNICATION BLOCK
var communication = [createCommunication(
	createCodeableConcept(
		[createCoding(&quot;urn:ietf:bcp:47&quot;, &quot;&quot;, &quot;&quot;, msg.PID.language.trim(), &quot;&quot;)],
		&quot;&quot;
		), 
	true
	)];




const patient = createPatient(
	&quot;Patient&quot;,
	msg.PID.id1.trim(),
	identifier, 
	true, 
	[name], 
	telecomList, 
	createGender(msg.PID.gender.trim()), 
	birthDate, 
	false, 
	[address], 
	maritalStatus, 
	&quot;&quot;, 
	&quot;&quot;, 
	contactList, 
	communication, 
	&quot;&quot;, //generalPractitioner to be implemented
	{&quot;reference&quot;:msg.PV1.facility.trim()}, 
	&quot;&quot;);



msg = patient;
//logger.info(msg);</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>JSON</inboundDataType>
      <outboundDataType>JSON</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.2.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.2.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.2.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.2.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="4.2.0">
      <elements/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="4.2.0">
      <metaDataId>1</metaDataId>
      <name>GET from FHIR</name>
      <properties class="com.mirth.connect.connectors.http.HttpDispatcherProperties" version="4.2.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.2.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <host>${httpEndPoint}</host>
        <useProxyServer>false</useProxyServer>
        <proxyAddress></proxyAddress>
        <proxyPort></proxyPort>
        <method>get</method>
        <headers class="linked-hash-map">
          <entry>
            <string>x-amz-date</string>
            <list>
              <string>${x-amz-date}</string>
            </list>
          </entry>
          <entry>
            <string>Authorization</string>
            <list>
              <string>${Authorization}</string>
            </list>
          </entry>
        </headers>
        <parameters class="linked-hash-map">
          <entry>
            <string>identifier</string>
            <list>
              <string>${identifier}</string>
            </list>
          </entry>
        </parameters>
        <useHeadersVariable>false</useHeadersVariable>
        <headersVariable></headersVariable>
        <useParametersVariable>false</useParametersVariable>
        <parametersVariable></parametersVariable>
        <responseXmlBody>false</responseXmlBody>
        <responseParseMultipart>true</responseParseMultipart>
        <responseIncludeMetadata>false</responseIncludeMetadata>
        <responseBinaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</responseBinaryMimeTypes>
        <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
        <multipart>false</multipart>
        <useAuthentication>false</useAuthentication>
        <authenticationType>Basic</authenticationType>
        <usePreemptiveAuthentication>false</usePreemptiveAuthentication>
        <username></username>
        <password></password>
        <content></content>
        <contentType>text/plain</contentType>
        <dataTypeBinary>false</dataTypeBinary>
        <charset>UTF-8</charset>
        <socketTimeout>30000</socketTimeout>
      </properties>
      <transformer version="4.2.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.2.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>//get Patient id for the query

logger.info(&quot;MSG IN DEST: &quot; + JSON.stringify(msg));
responseMap.put(&quot;originalMessage&quot;, JSON.stringify(msg));

var patientID = msg.id;

//get the header and signing information
var accessKeyID = configurationMap.get(&apos;accessKeyID&apos;);
var secretAccessKey = configurationMap.get(&apos;secretAccessKey&apos;);
var canonicalURI = &quot;/datastore/&quot; + configurationMap.get(&apos;datastoreID&apos;) + &quot;/r4/Patient&quot;; //must have a leading forward slash
var host = configurationMap.get(&apos;awsService&apos;) + &quot;.&quot; + configurationMap.get(&apos;region&apos;) + &quot;.amazonaws.com&quot;
var endPoint = &quot;https://&quot; + host + canonicalURI;
var regionName = configurationMap.get(&apos;region&apos;);
var serviceName = configurationMap.get(&apos;awsService&apos;);
var httpMethodName = &quot;GET&quot;;


//FORMAT OF INPUT STRING MUST BE
//var queryParametes = &quot;myparam1=aValue,myparam2=anotherValue&quot;; // consider the input with , delimited KeyValuePairs
var queryParametes = &quot;identifier=&quot; + patientID;

//FORMAT OF INPUT STRING MUST BE
//String awsHeaders = &quot;1=ONE,2=TWO,3=THREE,4=FOUR&quot;; // consider the input with , delimited KeyValuePairs
var awsHeaders = &quot;host=&quot; + host;
//var payload = JSON.stringify(msg);
var debug = true;

var s4 = new Packages.com.amazon.s4.s4.Builder(accessKeyID,secretAccessKey);

s4.regionName(regionName);
s4.serviceName(serviceName);
s4.httpMethodName(httpMethodName);
s4.canonicalURI(canonicalURI);
s4.queryParametes(queryParametes);
s4.awsHeaders(awsHeaders);
//s4.payload(payload);
s4.debug(debug);

var myS4 = s4.build();
var strHeaders = myS4.getHeaders().toString();
var xAmzDate = strHeaders.substring((strHeaders.indexOf(&quot;x-amz-date&quot;) + 11), (strHeaders.indexOf(&quot;Authorization&quot;) - 2));
var authorization = strHeaders.substring((strHeaders.indexOf(&quot;Authorization=&quot;) + 14), strHeaders.indexOf(&quot;}&quot;));

//logger.info(&quot;RESULT: &quot; + s4.accessKeyID);
//logger.info(&quot;HEADERS: &quot; + strHeaders);

//logger.info(&quot;xAmzDate: &quot; + xAmzDate);
//logger.info(&quot;Autorization: &quot; + authorization);
//logger.info(&quot;Trimmed Payload: &quot; + payload.substring(0, 100));

channelMap.put(&quot;httpEndPoint&quot;, endPoint);
logger.info(&quot;ENDPOINT: &quot; + endPoint)
//channelMap.put(&quot;payload&quot;, payload);
channelMap.put(&quot;identifier&quot;, patientID);
channelMap.put(&quot;x-amz-date&quot;, xAmzDate);
channelMap.put(&quot;Authorization&quot;, authorization);</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.2.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.2.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.2.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.2.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.2.0">
        <elements>
          <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.2.0">
            <sequenceNumber>0</sequenceNumber>
            <enabled>true</enabled>
            <script>var responseMsg = JSON.parse(response.getMessage());
var originalMsg = JSON.parse(responseMap.get(&quot;originalMessage&quot;));
//logger.info(&quot;RESPONSE IS: &quot; + responseMsg);
//logger.info(&quot;ORIGINAL MESSAGE: &quot; + responseMap.get(&quot;originalMessage&quot;));
//logger.info(&quot;RESPONSE RESOURCE TYPE IS: &quot; + responseMsg.resourceType);
if (responseMsg) {
	if (responseMsg.entry) { // found at least one Patient resource with that GUID
		if (responseMsg.entry.length &gt; 1) {
			logger.info(&quot;Multiple patients (&quot; + responseMsg.entry.length + &quot;) have the same id1. Updating all&quot;);	
		}
		for each (patient in responseMsg.entry) {
			if (patient.resource.resourceType == &quot;Patient&quot;) {
				var patFhirID = patient.resource.id;
				logger.info(&quot;Updating patient resource: &quot; + patFhirID);
				originalMsg.id = patFhirID;
				router.routeMessage(&apos;PUT-to-FHIR-2&apos;, JSON.stringify(originalMsg));
			}
		}
	}
	else{ // there is no patient with that GUID in FHIR
		logger.info(&quot;Adding a NEW patient&quot;);
		router.routeMessage(&apos;POST-to-FHIR-2&apos;, JSON.stringify(originalMsg));
	}
}</script>
          </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
        </elements>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.2.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.2.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="4.2.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="4.2.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.2.0">
        <elements/>
      </filter>
      <transportName>HTTP Sender</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="4.2.0">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>true</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="4.2.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1681418284556</time>
        <timezone>America/Indianapolis</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
        <pruneErroredMessages>false</pruneErroredMessages>
      </pruningSettings>
      <userId>1</userId>
    </metadata>
    <codeTemplateLibraries>
      <codeTemplateLibrary version="4.2.0">
        <id>4451456d-a4a4-4b7b-98ae-e4cf711da507</id>
        <name>FHIR Function Definition</name>
        <revision>25</revision>
        <lastModified>
          <time>1681416526841</time>
          <timezone>Etc/UTC</timezone>
        </lastModified>
        <description>It defines the FHIR functions to construct the FHIR payload</description>
        <includeNewChannels>false</includeNewChannels>
        <enabledChannelIds>
          <string>18bf1f76-8e6c-4141-aa09-8c6f671e0582</string>
          <string>4a12416c-56cd-426c-a711-7c529a728ad6</string>
          <string>f29d1b79-8ed1-45a1-ab4d-2df18af5b653</string>
          <string>61db1c7e-1d44-4a0d-af5a-7cc08964a765</string>
          <string>bfb82818-39de-4707-b64d-7ea53f310bce</string>
          <string>bc7efe81-964a-452f-b96c-687836ee9edd</string>
          <string>4038db6d-7091-44e8-9a37-d72c4f56117d</string>
          <string>9058847a-f295-4531-a3f5-a85bed025914</string>
        </enabledChannelIds>
        <disabledChannelIds>
          <string>b85a4b06-7e15-4e57-b5ad-43efa2270e02</string>
          <string>469fda88-05b9-4fb6-a0c2-1bfb8c8d1c9f</string>
          <string>ca414f9e-b814-4d29-a432-461f009281c5</string>
        </disabledChannelIds>
        <codeTemplates>
          <codeTemplate version="4.2.0">
            <id>9cb70ef1-30e6-4b0d-b182-2dde4047f821</id>
            <name>createAddress</name>
            <revision>2</revision>
            <lastModified>
              <time>1679321286105</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createAddress (use,type,text,line,city,district,state,postalCode,country,period) {
	if (use &amp;&amp; type) { //required parameters
		var retValue = {};
		if (use) retValue.use = use;
		if (type) retValue.type = type;
		if (text) retValue.text = text;
		if (line) retValue.line = line;
		if (city) retValue.city = city;
		if (district) retValue.district = district;
		if (state) retValue.state = state;
		if (postalCode) retValue.postalCode = postalCode;
		if (country) retValue.country = country;
		if (period) retValue.period = period;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>cd5d3cdf-5454-4f7d-b947-da2bbdc0c7d9</id>
            <name>createCodeableConcept</name>
            <revision>4</revision>
            <lastModified>
              <time>1679322021403</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createCodeableConcept (coding,text) {
	if (coding || text) {
		var retValue = {};
		if (coding) retValue.coding = coding;
		if (text) retValue.text = text;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>a80b20b5-82b5-4541-bda6-d4ba7dfe78a2</id>
            <name>createCoding</name>
            <revision>5</revision>
            <lastModified>
              <time>1679100708704</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createCoding (system, version, code, display, userSelected) {
	if (system || version || code || display || userSelected) {
		var retValue = {};
		if (system) retValue.system = system;
		if (version) retValue.version = version;
		if (code) retValue.code = code;
		if (display) retValue.display = display;
		if (userSelected) retValue.userSelected = userSelected;
		return retValue
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>cdcd3174-0dc1-40f5-90a6-2b944687472d</id>
            <name>createCommunication</name>
            <revision>2</revision>
            <lastModified>
              <time>1679106322118</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createCommunication (language,preferred) {
	if (language || preferred) {
		var retValue = {};
		if (language) retValue.language = language;
		if (preferred) retValue.preferred = preferred;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>1825cf2e-ba48-4381-ac63-ec0bc9e59de2</id>
            <name>createContact</name>
            <revision>2</revision>
            <lastModified>
              <time>1679323403433</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createContact (relationship,name,telecom,address,gender,organization,period) {
	if (relationship&amp;&amp;name&amp;&amp;address) {
		var retValue = {};
		if (relationship) retValue.relationship = relationship;
		if (name) retValue.name = name;
		if (telecom) retValue.telecom = telecom;
		if (address) retValue.address = address;
		if (gender) retValue.gender = gender;
		if (organization) retValue.organization = organization;
		if (period) retValue.period = period;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>885e0bb6-3cb5-4daf-9b00-4320b9baaa7e</id>
            <name>createGender</name>
            <revision>4</revision>
            <lastModified>
              <time>1681419531100</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createGender(gender) {
	var retValue = &quot;&quot;
	//logger.info(&quot;GENDER IS: &quot; + gender)
	if (gender) {
		switch (gender.toLowerCase()) {
			case &quot;m&quot;:
			case &quot;male&quot;:
			case &quot;man&quot;:
				retValue = &quot;male&quot;;
			break;
			case &quot;f&quot;:
			case &quot;female&quot;:
			case &quot;woman&quot;:
				retValue  = &quot;female&quot;;
			break;
			case &quot;o&quot;:
			case &quot;other&quot;:
				retValue  = &quot;other&quot;;
			break;
			default:
				retValue  = &quot;unknown&quot;;
		}
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>ef6c92e5-538d-41ff-beda-1e21bf07fa87</id>
            <name>createIdentifier</name>
            <revision>4</revision>
            <lastModified>
              <time>1679321129936</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createIdentifier (use, type, system, value, period, assigner) {
	if (use) { //required parameter
		var retValue = {};
		retValue.use = use;
		if (type) retValue.type = type;
		if (system) retValue.system = system;
		if (value) retValue.value = value;
		if (period) retValue.period = period;
		if (assigner) retValue.assigner = assigner;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>b4e923e2-648d-4901-938a-117ffa4946f1</id>
            <name>createName</name>
            <revision>4</revision>
            <lastModified>
              <time>1679332231586</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createName (use,text,family,firstName,middleName,prefix,suffix,period) {
	if (use&amp;&amp;family&amp;&amp;(firstName||middleName)) { //required parameters
		var retValue = {};
		retValue.given = [];
		if (use) retValue.use = use;
		if (text) retValue.text = text;
		if (family) retValue.family = family;
		if (firstName) retValue.given.push(firstName);
		if (middleName) retValue.given.push(middleName);
		if (prefix) retValue.prefix = prefix;
		if (suffix) retValue.suffix = suffix;
		if (period) retValue.period = period;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>28144ac1-5d98-45b5-a7c3-fc8a20a83ea8</id>
            <name>createPatient</name>
            <revision>6</revision>
            <lastModified>
              <time>1679323438297</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createPatient (resourceType,id,identifier,active,name,telecom,gender,birthDate,deceased,address,maritalStatus,multipleBirth,photo,contact,communication,generalPractitioner,managingOrganization,link) {
	if (resourceType||id||identifier||active||name||telecom||gender||birthDate||deceased||address||maritalStatus||multipleBirth||photo||contact||communication||generalPractitioner||managingOrganization||link) {
		var retValue = {};
		if (resourceType) retValue.resourceType = resourceType;
		if (id) retValue.id = id;
		if (identifier) retValue.identifier = identifier;
		if (active) retValue.active = active;
		if (name) retValue.name = name;
		if (telecom) retValue.telecom = telecom;
		if (gender) retValue.gender = gender;
		if (birthDate) retValue.birthDate = birthDate;
		if (deceased) retValue.deceased = deceased;
		if (address) retValue.address = address;
		if (maritalStatus) retValue.maritalStatus = maritalStatus;
		if (multipleBirth) retValue.multipleBirth = multipleBirth;
		if (photo) retValue.photo = photo;
		if (contact) retValue.contact = contact;
		if (communication) retValue.communication = communication;
		if (generalPractitioner) retValue.generalPractitioner = generalPractitioner;
		if (managingOrganization) retValue.managingOrganization = managingOrganization;
		if (link) retValue.link = link;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>e8557c85-a1ec-4245-ac4f-6650b08d4850</id>
            <name>createPeriod</name>
            <revision>4</revision>
            <lastModified>
              <time>1679100597141</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createPeriod (start,end) {
	if (start || end) {
		var retValue = {};
		if (start) retValue.start = start;
		if (end) retValue.end = end;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>a815f5cd-4751-4616-859a-452e0b356dbe</id>
            <name>createReference</name>
            <revision>2</revision>
            <lastModified>
              <time>1679100811538</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createReference (reference, type, identifier, display) {
	if(reference || type || identifier || display) {
		var retValue = {};
		if (reference) retValue.reference = reference;
		if (type) retValue.type = type;
		if (identifier) retValue.identifier = identifier;
		if (display) retValue.display = display;
		return retValue
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.2.0">
            <id>c3899563-c59d-40d2-b9e5-8f19277f9960</id>
            <name>createTelecom</name>
            <revision>2</revision>
            <lastModified>
              <time>1679102565779</time>
              <timezone>Etc/UTC</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>function createTelecom (system,value,use,rank,period) {
	if (system||value||use||rank||period) {
		var retValue = {};
		if (system) retValue.system = system;
		if (value) retValue.value = value;
		if (use) retValue.use = use;
		if (rank) retValue.rank = rank;
		if (period) retValue.period = period;
		return retValue;
	}
	else return null;
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
    </codeTemplateLibraries>
  </exportData>
</channel>